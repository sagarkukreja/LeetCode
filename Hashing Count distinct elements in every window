
import java.util.Scanner;
import java.util.*;
import java.io.*;
import java.util.HashMap;
class CountELements
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while(t>0)
		{
			int n = sc.nextInt();
			int k = sc.nextInt();
			int a[] = new int[n];
			for(int i=0; i<n; i++)
				a[i] = sc.nextInt();
			//int k = sc.nextInt();
			
			GfG g = new GfG();
			g.countDistinct(a,k,n);			
			System.out.println();
		
		t--;
		}
	}
}
}

/*Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function is mentioned above.*/

/*You are required to complete below method */
class GfG
{
    void countDistinct(int A[], int k, int n)
    {
        int dist_count = 0;
    Map<Integer, Integer> hm = new HashMap<>();
    for(int i = 0;i<k;i++){
        if(!hm.containsKey(A[i])){
            hm.put(A[i],1);
            dist_count++;
        }
        else{
            hm.put(A[i], hm.get(A[i])+1);
        }
    }
    System.out.print(dist_count);
    for(int i = k;i<A.length;i++){
        if(hm.get(A[i-k]) == 1){
            hm.remove(A[i-k]);
            dist_count --;
        }
        else{
            hm.put(A[i-k], hm.get(A[i-k])-1);
        }
        
        if(hm.get(A[i] )== null){
            hm.put(A[i], 1);
            dist_count++;
        }
        else{
            hm.put(A[i],hm.get(A[i])+1);
        }
        System.out.print(" " + dist_count);
    }
    }
}
