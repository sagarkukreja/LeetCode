/* Dynamic Programming Java implementation of Maximum Sum
Increasing Subsequence (MSIS) problem */
class MSIS
{
	/* maxSumIS() returns the maximum sum of increasing
	subsequence in arr[] of size n */
	static int maxSumIS( int arr[], int n )
	{
		int max = 0;
		int[] maxsum = new int[n];
		for(int i = 0;i<n;i++){
		    maxsum[i] = arr[i];
		}
		for(int i = 1;i<n;i++){
		    for(int j = 0;j<i;j++){
		     if(maxsum[i]<arr[i]+maxsum[j] && arr[i]>arr[j]){
		         maxsum[i] = maxsum[j]+arr[i];
		     }       
		    }
		}
		for(int i = 0;i<n;i++){
		    if(max < maxsum[i]){
		        max = maxsum[i];
		    }
		}return max;
	}

	/* Driver program to test above function */
	public static void main(String args[])
	{
		int arr[] = new int[]{1, 101, 2, 3, 100, 4, 1};
		int n = arr.length;
		System.out.println("Sum of maximum sum increasing "+
						" subsequence is "+
		maxSumIS( arr, n ) );
	}
}

